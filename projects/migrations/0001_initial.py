# Generated by Django 2.1.2 on 2018-10-11 22:59

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ApiExcelCommands',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('routing_key', models.CharField(max_length=100)),
                ('classname', models.TextField(max_length=200)),
                ('method', models.TextField(choices=[('POST', 'POST'), ('GET', 'GET')], default='GET', max_length=10)),
                ('level', models.IntegerField(choices=[(1, 'Silver'), (10, 'Gold'), (100, 'Platinum'), (1000, 'Rhodium'), (10000, 'Diamond'), (100000, 'Endohedral'), (1000000, 'Antimatter')], default=0)),
                ('profile', models.IntegerField(choices=[(0, '---- ---- ---- ---- ----'), (1, '---- ---- ---- ---- EINF'), (2, '---- ---- ---- PINF ----'), (4, '---- ---- EING ---- ----'), (8, '---- PING ---- ---- ----'), (16, 'BYND ---- ---- ---- ----'), (31, '- ANY BODY CAN USE THIS-')], default=0)),
                ('crud', models.IntegerField(choices=[(0, '----'), (4, '-R--'), (12, 'CR--'), (14, 'CRU-'), (15, 'CRUD')])),
                ('enabled', models.BooleanField(default=True)),
                ('mailsubject', models.CharField(blank=True, max_length=200, null=True)),
                ('mailtext', models.TextField(blank=True, max_length=1000, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ApiExcelForms',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('apiname', models.CharField(blank=True, max_length=64, null=True)),
                ('apikey', models.CharField(blank=True, max_length=64, null=True)),
                ('created', models.DateField(auto_now_add=True)),
                ('reference', models.CharField(max_length=100)),
                ('enabled', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='CAPEXIO',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('linenumber', models.IntegerField(default=10)),
                ('colorlabel', models.CharField(choices=[('B', 'Blue'), ('G', 'Grey'), ('W', 'White'), ('Y', 'Yellow')], default='Y', max_length=1)),
                ('classification', models.CharField(blank=True, max_length=20, null=True)),
                ('capexio', models.CharField(blank=True, max_length=10, null=True)),
                ('capexamx', models.CharField(blank=True, max_length=10, null=True)),
                ('businessarea', models.CharField(blank=True, max_length=10, null=True)),
                ('macro', models.CharField(blank=True, max_length=10, null=True)),
                ('project', models.CharField(blank=True, max_length=50, null=True)),
                ('subproject', models.CharField(blank=True, max_length=50, null=True)),
                ('iopriority', models.CharField(blank=True, max_length=10, null=True)),
                ('AB', models.CharField(blank=True, max_length=10, null=True)),
                ('SAP', models.CharField(blank=True, max_length=20, null=True)),
                ('vendor', models.CharField(blank=True, max_length=10, null=True)),
                ('projectlabel', models.CharField(blank=True, max_length=140, null=True)),
                ('metric', models.CharField(default='#Unidades', max_length=100)),
                ('units', models.DecimalField(decimal_places=2, default=0, max_digits=20)),
                ('unitarycost', models.DecimalField(decimal_places=2, default=0, max_digits=20)),
                ('ammount', models.DecimalField(decimal_places=2, default=0, max_digits=20)),
                ('support', models.CharField(blank=True, max_length=300, null=True)),
                ('owner', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CAPEXStructure',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField(choices=[(2017, 'Año pasado'), (2018, 'Año en curso'), (2019, 'Año siguiente')])),
                ('name', models.CharField(editable=False, max_length=10)),
                ('reference', models.CharField(max_length=100)),
                ('created', models.DateField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('structuretype', models.CharField(choices=[('S', 'Structure'), ('T', 'Transaction')], max_length=1)),
                ('enabled', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='CAPEXTransaction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('created', models.DateField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('value', models.DecimalField(decimal_places=2, max_digits=20)),
                ('reference', models.TextField(max_length=200)),
                ('enabled', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('address', models.CharField(max_length=100)),
                ('companyclass', models.CharField(choices=[('O', 'Propietario'), ('P', 'Proveedor'), ('V', 'Virtual')], max_length=1)),
                ('contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CompanyArea',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Company')),
            ],
        ),
        migrations.CreateModel(
            name='CompanyFamilyArea',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('PLAFJA', 'Planificación'), ('PROFJA', 'Proyectos'), ('PLAINF', 'Planificación infraestructura'), ('PROINF', 'Proyectos infraestructura'), ('CONINF', 'Construcción infraestructura'), ('COMPRA', 'Compras'), ('IMPLAN', 'Implantación'), ('PROVDR', 'Proveedor')], max_length=6)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Company')),
            ],
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('isoname', models.CharField(choices=[('GT', 'Guatemala'), ('SV', 'El Salvador'), ('HN', 'Honduras'), ('NI', 'Nicaragua'), ('CR', 'Costa Rica'), ('PA', 'Panama')], max_length=2)),
                ('isocurrency', models.CharField(choices=[('USD', 'Dollar'), ('GTQ', 'Quetzal'), ('HNL', 'Lempira'), ('NIO', 'Cordoba'), ('CRC', 'Colon'), ('PAB', 'Balboa')], max_length=3)),
            ],
        ),
        migrations.CreateModel(
            name='Deliverable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dtype', models.CharField(choices=[('G', 'Global'), ('S', 'Sitio')], max_length=1)),
                ('dlevel', models.IntegerField(default=10)),
                ('dtitle', models.CharField(max_length=100)),
                ('areafamily', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.CompanyFamilyArea')),
            ],
        ),
        migrations.CreateModel(
            name='DeliverableEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deliverableid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('delivered', models.BooleanField(default=False)),
                ('dateplanned', models.DateField()),
                ('datedelivered', models.DateField()),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=10)),
                ('comments', models.TextField(default='#Comentarios', max_length=1000)),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('address', models.CharField(blank=True, max_length=200)),
                ('locationclass', models.CharField(choices=[('W', 'Bodega'), ('O', 'Sitio propio'), ('A', 'Bodega Proveedor'), ('V', 'Sitio Virtual'), ('R', 'Sitio arrendado'), ('C', 'Celda'), ('P', 'Poste')], max_length=1)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('nemonic', models.CharField(blank=True, max_length=10)),
                ('sapsite', models.CharField(blank=True, max_length=10)),
                ('sapcenter', models.CharField(blank=True, max_length=10)),
                ('lat', models.FloatField(blank=True)),
                ('lon', models.FloatField(blank=True)),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.City')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Company')),
            ],
        ),
        migrations.CreateModel(
            name='PDS',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('enabled', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('partnumber', models.CharField(max_length=150)),
                ('sapcode', models.CharField(max_length=50)),
                ('description', models.CharField(max_length=100)),
                ('created', models.DateField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('enabled', models.BooleanField(default=True)),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Company')),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pid', models.CharField(editable=False, max_length=8)),
                ('year', models.IntegerField(choices=[(2018, '2018'), (2019, '2019')])),
                ('created', models.DateField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('ptype', models.CharField(choices=[('AC', 'Acceso'), ('AM', 'AMX'), ('AP', 'Aplicaciones'), ('CO', 'Core'), ('DI', 'Distribución'), ('LB', 'Laboratorio'), ('VI', 'Video')], max_length=2)),
                ('name', models.CharField(max_length=200)),
                ('reference', models.CharField(blank=True, max_length=200)),
                ('label', models.CharField(default='Normal', max_length=100)),
                ('priority', models.IntegerField(default=100)),
                ('objective', models.TextField(default='#Objetivo', max_length=5000)),
                ('justify', models.TextField(default='#Justificación', max_length=5000)),
                ('status', models.CharField(choices=[('DP', 'Diseño planificación'), ('AP', 'Autorizado planificación'), ('IP', 'Implementación de proyecto')], max_length=2)),
                ('background', models.TextField(blank=True, default='#Antecedentes', max_length=5000, null=True)),
                ('totallocations', models.IntegerField(default=0)),
                ('modelcreated', models.BooleanField(default=False)),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Country')),
            ],
        ),
        migrations.CreateModel(
            name='ProjectEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100)),
                ('taskid', models.CharField(blank=True, max_length=100)),
                ('system', models.CharField(choices=[('SM', 'Service Manage'), ('SP', 'SAP'), ('BP', 'BProjects')], default='BP', max_length=2)),
                ('description', models.TextField(blank=True, max_length=1000)),
                ('start', models.DateTimeField()),
                ('end', models.DateTimeField()),
                ('progress', models.FloatField(default=0)),
                ('planning', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='ProjectEventLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated', models.DateField(auto_now_add=True)),
                ('progress', models.FloatField()),
                ('start', models.DateTimeField()),
                ('end', models.DateTimeField()),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.ProjectEvent')),
            ],
        ),
        migrations.CreateModel(
            name='ProjectLocation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nodeuuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('planningref', models.CharField(max_length=100)),
                ('nodetype', models.CharField(choices=[('IND', 'Existente indoor'), ('OUT', 'Existente outdoor'), ('BNW', 'Nuevo construido/con permisos'), ('UCP', 'Nuevo en construcción/con permisos'), ('DWC', 'Nuevo definido/sin permisos'), ('TBD', 'Nodo pendiente de definir'), ('WHS', 'Bodega'), ('WPR', 'Bodega proveedor')], default='TBD', max_length=3)),
                ('priority', models.IntegerField(default=10)),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='projects.Location')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Project')),
            ],
        ),
        migrations.CreateModel(
            name='ProjectQuote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('created', models.DateField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('itemclass', models.CharField(choices=[('HW', 'Hardware'), ('SW', 'Licencias'), ('TX', 'Impuestos'), ('SH', 'Transporte'), ('IF', 'Infraestructura'), ('SR', 'Servicios')], max_length=2)),
                ('description', models.CharField(max_length=140)),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=20)),
                ('incoterm', models.CharField(choices=[('EXW', 'EXW'), ('FCA', 'FCA'), ('FAS', 'FAS'), ('FOB', 'FOB'), ('CFR', 'CFR'), ('CIF', 'CIF'), ('CPT', 'CPT'), ('CIP', 'CIP'), ('DAT', 'DAT'), ('DAP', 'DAP'), ('DDP', 'DDP')], max_length=3)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=20)),
                ('partnumber', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='projects.Product')),
            ],
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Country')),
            ],
        ),
        migrations.CreateModel(
            name='RequestUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(default='', max_length=20)),
                ('first_name', models.CharField(default='', max_length=100)),
                ('last_name', models.CharField(default='', max_length=100)),
                ('email', models.EmailField(default='', max_length=254)),
                ('phone', models.CharField(max_length=20)),
                ('phone_alt', models.CharField(max_length=20)),
                ('company', models.CharField(default='CLARO', max_length=20)),
                ('area', models.CharField(default='Planificación fija', max_length=100)),
                ('country', models.CharField(default='GT', max_length=2)),
                ('created', models.DateTimeField(auto_now=True)),
                ('authorized', models.BooleanField(default=False)),
                ('status', models.CharField(default='', max_length=100)),
                ('acceptterms', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Stage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ntype', models.CharField(choices=[('G', 'Global'), ('S', 'Sitio')], max_length=1)),
                ('nlevel', models.IntegerField(default=10)),
                ('ntitle', models.CharField(max_length=100)),
                ('nuuid', models.UUIDField(blank=True, default=uuid.uuid4)),
                ('deliverable', models.CharField(max_length=200)),
                ('areafamily', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.CompanyFamilyArea')),
            ],
        ),
        migrations.CreateModel(
            name='StageGoal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slot', models.IntegerField(default=0)),
                ('goal', models.DecimalField(decimal_places=2, max_digits=5)),
                ('stage', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Stage')),
            ],
        ),
        migrations.CreateModel(
            name='Units',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('km', 'Kilometros'), ('m', 'Metros'), ('cm', 'Centimetros'), ('in', 'Pulgadas'), ('Puertos', 'Puertos'), ('SFP', 'SFP'), ('Tarjetas', 'Tarjetas'), ('Chasis', 'Chasis'), ('Rack', 'Rack'), ('Switch', 'Switch'), ('Router', 'Router'), ('Servidor', 'Servidor')], max_length=100)),
                ('utype', models.CharField(choices=[('LN', 'Longitud'), ('WG', 'Peso'), ('NE', 'Equipo de red'), ('SW', 'Software'), ('LI', 'Licencia'), ('SR', 'Servicio')], max_length=2)),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.IntegerField(choices=[(1, 'Silver'), (10, 'Gold'), (100, 'Platinum'), (1000, 'Rhodium'), (10000, 'Diamond'), (100000, 'Endohedral'), (1000000, 'Antimatter')], default=1)),
                ('profile', models.IntegerField(default=0)),
                ('phone', models.CharField(default='', max_length=20)),
                ('phone_alt', models.CharField(default='', max_length=20)),
                ('area', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.CompanyArea')),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Country')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='WBS',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('enabled', models.BooleanField(default=True)),
            ],
        ),
        migrations.AddField(
            model_name='stage',
            name='wbs',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.WBS'),
        ),
        migrations.AddField(
            model_name='requestuser',
            name='authorizedby',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='projects.UserProfile'),
        ),
        migrations.AddField(
            model_name='projectquote',
            name='units',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='projects.Units'),
        ),
        migrations.AddField(
            model_name='projectquote',
            name='vendor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Company'),
        ),
        migrations.AddField(
            model_name='projectevent',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.UserProfile'),
        ),
        migrations.AddField(
            model_name='projectevent',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Project'),
        ),
        migrations.AddField(
            model_name='projectevent',
            name='projectnode',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='projects.ProjectLocation'),
        ),
        migrations.AddField(
            model_name='projectevent',
            name='stage',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Stage'),
        ),
        migrations.AddField(
            model_name='project',
            name='owner',
            field=models.ManyToManyField(to='projects.UserProfile'),
        ),
        migrations.AddField(
            model_name='project',
            name='pds',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.PDS'),
        ),
        migrations.AddField(
            model_name='project',
            name='wbs',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.WBS'),
        ),
        migrations.AddField(
            model_name='deliverableevent',
            name='crowd',
            field=models.ManyToManyField(to='projects.UserProfile'),
        ),
        migrations.AddField(
            model_name='deliverableevent',
            name='deliverable',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Deliverable'),
        ),
        migrations.AddField(
            model_name='deliverableevent',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Project'),
        ),
        migrations.AddField(
            model_name='deliverableevent',
            name='projectnode',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='projects.ProjectLocation'),
        ),
        migrations.AddField(
            model_name='deliverableevent',
            name='units',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Units'),
        ),
        migrations.AddField(
            model_name='deliverable',
            name='pds',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.PDS'),
        ),
        migrations.AddField(
            model_name='companyarea',
            name='family',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='projects.CompanyFamilyArea'),
        ),
        migrations.AddField(
            model_name='company',
            name='countries',
            field=models.ManyToManyField(to='projects.Country'),
        ),
        migrations.AddField(
            model_name='city',
            name='region',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Region'),
        ),
        migrations.AddField(
            model_name='capextransaction',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Project'),
        ),
        migrations.AddField(
            model_name='capextransaction',
            name='structure',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.CAPEXStructure'),
        ),
        migrations.AddField(
            model_name='capexio',
            name='country',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Country'),
        ),
        migrations.AddField(
            model_name='capexio',
            name='structure',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.CAPEXStructure'),
        ),
        migrations.AddField(
            model_name='apiexcelcommands',
            name='api',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.ApiExcelForms'),
        ),
    ]
